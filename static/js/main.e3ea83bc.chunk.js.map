{"version":3,"sources":["clock/clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","hour","setHour","minutes","setMinutes","seconds","setSeconds","errorMes","setErrorMes","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","element","target","parseInt","style","transform","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAoEeA,EAhED,WACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KA6BE,OAEE,sBAAKC,UAAU,uBAAf,UACE,+CACC,sBAAKA,UAAU,kBAAf,UACE,sBAAMC,SAbK,SAACC,GAClBA,EAAEC,iBACHV,EAAQD,GACRG,EAAWD,GACXG,EAAWD,GACXG,GAAY,IAQL,SACA,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAf,UACA,uBAAOI,KAAK,SAASC,YAAY,QAAQC,MAAQd,EAChDe,SApCc,SAACL,GACvB,IAAIM,EAAUN,EAAEO,OAAOH,MACvBE,EAAUE,SAASF,GACnBf,EAAQe,GACY,kBAAbA,GAAyBA,GAAW,GAAKf,EAAQe,GAAWT,GAAY,MAiCvE,uBAAOK,KAAK,SAASC,YAAY,UAAUC,MAAOZ,EAClDa,SAhCiB,SAACL,GAC5B,IAAIM,EAAUN,EAAEO,OAAOH,MACvBE,EAAUE,SAASF,GACnBb,EAAWa,GACS,kBAAbA,GAAyBA,GAAW,GAAKb,EAAWa,GAAWT,GAAY,MA6BxE,uBAAOK,KAAK,SAASC,YAAY,UAAUC,MAAOV,EAClDW,SA5BgB,SAACL,GAC3B,IAAIM,EAAUN,EAAEO,OAAOH,MACvBE,EAAUE,SAASF,GACnBX,EAAWW,GACS,kBAAbA,GAAyBA,GAAW,GAAKX,EAAWW,GAAWT,GAAY,SA0BxED,GAAa,mBAAGE,UAAU,WAAb,0CACb,wBAAQA,UAAU,QAAlB,0BAIH,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,kBAAkBW,MAAO,CAACC,UAAU,UAAD,OAAiB,GAANpB,EAAX,WAClD,qBAAKQ,UAAU,iBAAiBW,MAAO,CAACC,UAAU,UAAD,OAAoB,EAATlB,EAAX,WACjD,qBAAKM,UAAU,iBAAiBW,MAAO,CAACC,UAAU,UAAD,OAAoB,EAAThB,EAAX,qBChD7CiB,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCKSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e3ea83bc.chunk.js","sourcesContent":["import {useState,useEffect} from 'react'\r\n\r\n\r\n\r\nconst Clock = () => {\r\nconst [hour, setHour] = useState(\"\");\r\nconst [minutes, setMinutes] = useState(\"\");\r\nconst [seconds, setSeconds] = useState(\"\");\r\nconst [errorMes, setErrorMes]= useState(false);\r\n\r\n const enterHourHandler = (e) =>{\r\n    let element = e.target.value;\r\n    element = parseInt(element);\r\n    setHour(element)\r\n    typeof element  === 'number' && element <= 24 ? setHour(element) : setErrorMes(true);\r\n }\r\n const enterMinutesHandler = (e) =>{\r\n  let element = e.target.value;\r\n  element = parseInt(element);\r\n  setMinutes(element)\r\n  typeof element  === 'number' && element <= 60 ? setMinutes(element) : setErrorMes(true);\r\n}\r\nconst enterSecondsHandler = (e) =>{\r\n  let element = e.target.value;\r\n  element = parseInt(element);\r\n  setSeconds(element)\r\n  typeof element  === 'number' && element <= 60 ? setSeconds(element) : setErrorMes(true);\r\n}\r\n\r\n const submitTime = (e) =>{\r\n   e.preventDefault();\r\n  setHour(hour )\r\n  setMinutes(minutes)\r\n  setSeconds(seconds)\r\n  setErrorMes(false)\r\n}\r\n\r\n  return ( \r\n   \r\n    <div className=\"clock-main-container\" >\r\n      <h2>React Clock !</h2>\r\n       <div className=\"clock-container\">\r\n         <form onSubmit={submitTime}>\r\n         <div className=\"input-c\">\r\n           <div className=\"inputContainer\">\r\n           <input type=\"number\" placeholder=\"Hours\" value ={hour}\r\n            onChange={enterHourHandler}  />\r\n            <input type=\"number\" placeholder=\"Minutes\" value={minutes}\r\n            onChange={enterMinutesHandler}  />\r\n            <input type=\"number\" placeholder=\"Seconds\" value={seconds}\r\n            onChange={enterSecondsHandler}  />\r\n           </div>\r\n           {errorMes &&  <p className=\"errorMes\">Please, enter a valid number</p> }\r\n            <button className=\"btn-c\"  >Submit </button>   \r\n          \r\n        </div> \r\n         </form>\r\n         <div className=\"clock-c\">\r\n           <div className=\"hand hand-hour \" style={{transform:`rotate(${hour *30}deg)`}} ></div> \r\n           <div className=\"hand hand-min \" style={{transform:`rotate(${minutes *6 }deg)`}} ></div> \r\n           <div className=\"hand hand-sec \" style={{transform:`rotate(${seconds *6}deg)`}} ></div> \r\n        </div> \r\n     </div>\r\n    </div> \r\n\r\n   );\r\n}\r\n \r\nexport default Clock;","\nimport './App.css';\nimport Clock from './clock/clock';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}